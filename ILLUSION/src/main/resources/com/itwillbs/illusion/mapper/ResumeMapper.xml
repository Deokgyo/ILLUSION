<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.illusion.mapper.ResumeMapper">

	<insert id="insertResume" parameterType="map"
		useGeneratedKeys="true" keyProperty="resume_idx">
		INSERT INTO resume (
		member_idx,
		resume_title,
		resume_create_at,
		resume_img,
		school_name,
		major,
		grade,
		degree,
		enroll_date,
		graduation_date
		) VALUES (
		#{member_idx},
		#{resume_title},
		NOW(),
		#{resume_img},
		#{school_name},
		#{major},
		#{grade},
		#{degree},
		#{enroll_date},
		#{graduation_date}
		)
	</insert>
	<insert id="insertResume_exp_info" parameterType="map">
		INSERT INTO
		resume_exp_info(
		resume_idx,
		company_name,
		occupation,
		position,
		experience
		) values(
		#{resume_idx},
		#{company_name},
		#{occupation},
		#{position},
		#{experience}
		)

	</insert>
	<update id="updateResume" parameterType="map"
		useGeneratedKeys="true" keyProperty="resume_idx">
		UPDATE resume
		SET
		member_idx = #{member_idx},
		resume_title = #{resume_title},
		resume_create_at = #{resume_create_at},
		resume_img = #{resume_img},
		school_name = #{school_name},
		major = #{major},
		grade = #{grade},
		degree = #{degree},
		enroll_date = #{enroll_date},
		graduation_date = #{graduation_date}
		WHERE resume_idx = #{resume_idx}
	</update>

	<update id="updateResume_exp_info" parameterType="map">
		UPDATE resume_exp_info
		SET
		resume_idx = #{resume_idx},
		company_name = #{company_name},
		position = #{position},
		experience = #{experience},
		occupation = #{occupation}
		WHERE exp_idx = #{exp_idx}
	</update>



	<select id="selectResumeExpInfoList" parameterType="int"
		resultType="map">
		SELECT
		resume_idx,
		company_name,
		occupation,
		position,
		experience
		FROM
		resume_exp_info
		WHERE
		resume_idx = #{resume_idx}
	</select>

	<select id="selectResumelist" resultType="map">
		SELECT resume_idx,
		resume_title, resume_create_at
		FROM resume
	</select>


	<select id="selectResume" parameterType="int" resultType="map">
		SELECT
		* FROM resume WHERE resume_idx = #{resume_idx}
	</select>


	<select id="selectMember" parameterType="int" resultType="map">
		SELECT
		* FROM member WHERE member_idx = #{member_idx}
	</select>

	<!-- 이력서 삭제 -->
	<delete id="deleteResume" parameterType="map">

		DELETE FROM resume
		WHERE resume_idx=#{resume_idx}

	</delete>
	<!-- 이력서 경력삭제 -->
	<delete id="deleteResume_exp_info" parameterType="map">
		DELETE FROM resume_exp_info
		WHERE exp_idx=#{exp_idx}
	</delete>


	<!-- 회원정보 조회 -->
	<select id="selectuserInfoEdit" parameterType="int"
		resultType="map">
		SELECT* FROM member
		WHERE member_idx =#{member_idx}
	</select>



	<update id="updateuserInfoEdit" parameterType="map">
		UPDATE member
		SET
		member_name = #{member_name},
		member_id = #{member_id},
		member_email = #{member_email},
		address_name = #{address_name},
		gender = #{gender},
		resume_birth = #{resume_birth}
		WHERE member_idx = #{member_idx}
	</update>

	<!-- 예상면접질문 -->
	<select id="selectquestList" resultType="map">
		SELECT answer_idx,
		question_idx, member_idx, answer_text, ai_feedback, answer_create_at
		FROM answer
	</select>



	<!-- 커뮤니티 목록 -->
	<select id="selectboard" resultType="map">
		SELECT board_idx,
		board_title, board_create_at, board_viewcnt,cmt_count
		FROM board
	</select>



	<!-- 자소서상세페이지 -->
	<select id="selectcl" parameterType="int" resultType="map">
		SELECT *
		FROM cover_letter WHERE cl_idx = #{cl_idx}
	</select>
	<!-- 자소서리스트 -->
	<select id="selectcllist" resultType="map">
		SELECT cl_idx, cl_title,
		generation_date
		FROM cover_letter
	</select>
	
	<!-- ////////////////////////// -->
	<!-- 마이페이지 이력서 목록 셀렉트 -->
	<select id="getResumeListByMemberId" parameterType="int" resultType="com.itwillbs.illusion.vo.ResumeVO">
		SELECT
			   resume_idx
		     , member_idx
		     , resume_title
		     , resume_create_at
		  FROM resume
		 WHERE member_idx = #{memberIdx}
		 ORDER BY resume_idx DESC
		 LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- select한 이력서 개수 -->
	<select id="getResumeListCountByMember" parameterType="com.itwillbs.illusion.vo.ResumeVO" resultType="int">
	    SELECT COUNT(*)
  	      FROM resume
  	     WHERE member_idx = #{memberIdx}
	</select>
	
	<select id="savedResumeDetail" parameterType="int" resultType="com.itwillbs.illusion.vo.ResumeVO">
		SELECT r.resume_idx
			   ,m.member_idx
			   ,m.member_name
			   ,m.resume_birth
			   ,m.member_phone
			   ,m.member_email
			   ,m.address_name
			   ,m.address_num
			   ,r.school_name
			   ,r.major
			   ,r.enroll_date
			   ,r.graduation_date
			   ,deg.code_name as degree
		       ,e.company_name
		       ,e.position
		       ,exp.code_name as experience
		       ,occ.code_name as occupation
		 FROM resume r LEFT JOIN member m ON r.member_idx = m.member_idx
		 LEFT JOIN resume_exp_info e ON r.resume_idx = e.resume_idx
		 LEFT JOIN common_code deg ON deg.code = r.degree
		 LEFT JOIN common_code exp ON exp.code = e.experience
		 LEFT JOIN common_code occ ON occ.code = e.occupation
		WHERE r.resume_idx = #{resumeIdx}
	</select>
	
	<!-- 마이페이지 여러건 이력서 삭제  -->
	<delete id="deleteMyResumes" parameterType="map">
    DELETE 
      FROM resume
     WHERE member_idx = #{memberIdx}
       AND resume_idx IN
        <foreach item="resumeIdx" collection="idList" open="(" separator="," close=")">
            #{resumeIdx}
        </foreach>
	</delete>
	
	<!-- 마이페이지 자소서 목록 셀렉트 -->
	<select id="getCLListByMemberId" parameterType="int" resultType="com.itwillbs.illusion.vo.CoverLetterVO">
		 SELECT
		 	    c.cl_idx
		      , c.member_idx
		      , c.cl_title
		      , c.generation_date
		      , t.code_name as cl_type
		   FROM cover_letter c LEFT JOIN common_code t ON t.code = c.cl_type 
		  WHERE c.member_idx = #{memberIdx}
		  ORDER BY cl_idx DESC
		  LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- select한 자소서 개수 -->
	<select id="getCLListCountByMember" parameterType="com.itwillbs.illusion.vo.CoverLetterVO" resultType="int">
	    SELECT COUNT(*)
  	      FROM cover_letter
  	     WHERE member_idx = #{memberIdx}
	</select>
	
	<!-- 마이페이지 여러건 자소서 삭제  -->
	<delete id="deleteMyCLs" parameterType="map">
    DELETE 
      FROM cover_letter
     WHERE member_idx = #{memberIdx}
       AND cl_idx IN
        <foreach item="clIdx" collection="idList" open="(" separator="," close=")">
            #{clIdx}
        </foreach>
	</delete>
	
</mapper>