<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.illusion.mapper.RecruitMapper">
	
	<select id="selectRecruitList" resultType="com.itwillbs.illusion.vo.RecruitVO">
		SELECT
			r.recruit_idx,
			CONCAT(c_parent.code_name, ' ', c_child.code_name) AS location,
			occ.code_name as occupation,
			r.start_date,
			r.end_date,
			r.views_count,
			r.recruit_subject
		FROM 
			recruit r LEFT JOIN common_code c_child ON r.location = c_child.code
            LEFT JOIN common_code c_parent ON c_child.parent_code_id = c_parent.code
		    LEFT JOIN common_code occ ON r.occupation = occ.code
		ORDER BY
        <choose>
            <when test="sort == 'end_date'">
                r.end_date ASC, r.recruit_idx DESC
            </when>
            <when test="sort == 'views'">
                r.views_count DESC, r.recruit_idx DESC
            </when>
            <otherwise>
                r.recruit_idx DESC
            </otherwise>
        </choose>
	</select>
	
	<select id="selectRecruitIndex" resultType="com.itwillbs.illusion.vo.RecruitVO">
	SELECT 
		r.recruit_idx,
	    r.recruiter_member_idx,
		loc.code_name AS location,
		occ.code_name as occupation,
	    exp.code_name AS experience,
	    sal.code_name AS salary,
	    deg.code_name AS degree,
		r.start_date,
		r.end_date,
		r.app_count,
	    r.recruit_context,
		r.recruit_subject,
	    typ.code_name AS recruit_type,
	    r.recruit_hiring_num,
	    r.start_time,
	    r.end_time,
	    ema.recruiter_member_email,
	    c.company_idx,
	    c.ceo_name,
	    c.company_name,
	    cty.code_name AS company_type,
	    cin.code_name AS company_industry,
	    c.company_estab_date,
	    a.province,
		a.city_district,
		a.postcode,
		a.road_address,
		a.detail_address,
		a.full_address
	FROM 
		recruit r 
		LEFT JOIN common_code loc ON r.location = loc.code
		LEFT JOIN common_code occ ON r.occupation = occ.code
		LEFT JOIN common_code exp ON r.experience = exp.code
		LEFT JOIN common_code sal ON r.salary = sal.code
		LEFT JOIN common_code deg ON r.degree = deg.code
		LEFT JOIN common_code typ ON r.recruit_type = typ.code
		LEFT JOIN recruiter_member ema ON r.recruiter_member_idx = ema.recruiter_member_idx
		LEFT JOIN company c ON ema.company_idx = c.company_idx
		LEFT JOIN common_code cty ON c.company_type = cty.code
		LEFT JOIN common_code cin ON c.company_industry = cin.code
		LEFT JOIN address a ON c.address_idx = a.address_idx
	WHERE 
		r.recruit_idx = #{recruit_idx};
	</select>
	
	<select id="applyModal" resultType="com.itwillbs.illusion.vo.ApplyVO">
	SELECT
		a.apply_idx,
	    r.resume_idx,
	    c.cl_idx,
		r.resume_title,
	    c.cl_title,
	    a.apply_files_path,
	    a.member_idx
	FROM apply a
		LEFT JOIN resume r ON a.resume_idx = r.resume_idx
		LEFT JOIN cover_letter c ON a.cl_idx = c.cl_idx
		LEFT JOIN member m ON m.member_idx = a.member_idx
	WHERE 
		a.recruit_idx = 1
	AND 
		a.member_idx = 1;
	</select>
	
	<insert id="insertApply">
	<selectKey keyProperty="apply_idx" resultType="int" order="BEFORE">
	SELECT IFNULL(MAX(apply_idx), 0) + 1
	  FROM apply
	</selectKey>
	INSERT INTO apply
	VALUES (#{apply_idx},
			1, <!-- 추후 #{member_idx}로 변경  -->
			#{recruit_idx},
			#{resume_idx},
			#{cl_idx},
			#{apply_files_path},
			#{apply_date},
			#{apply_status},
			#{is_viewed});
		
	</insert>
	
	
</mapper>